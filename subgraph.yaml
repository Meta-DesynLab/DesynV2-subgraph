specVersion: 0.0.2
description: Desyn is a non-custodial portfolio manager, liquidity provider, and price sensor.
repository: https://github.com/DeSyn-Lab/desyn-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: mainnet
    source:
      address: "0x01a38B39BEddCD6bFEedBA14057E053cBF529cD2"
      abi: Factory
      startBlock: 17335174
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Desyn
      abis:
        - name: Factory
          file: ./abis/BFactory.json
        - name: CRPFactory
          file: ./abis/CRPFactory.json
        - name: ConfigurableRightsPool
          file: ./abis/ConfigurableRightsPool.json
      eventHandlers:
        - event: LOG_NEW_POOL(indexed address,indexed address)
          handler: handleNewPool
  - kind: ethereum/contract
    name: RebalanceAdapter
    network: mainnet
    source:
      address: "0xFa3BE99C256aeB50e96067454eA0c883c830c348"
      abi: RebalanceAdapter
      startBlock: 17340296
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - RebalanceAdapter
      abis:
        - name: RebalanceAdapter
          file: ./abis/RebalanceAdapter.json
        - name: BToken
          file: ./abis/BToken.json
        - name: BTokenBytes
          file: ./abis/BTokenBytes32.json
      eventHandlers:
        - event: Rebalanced(indexed address,indexed address,uint256,uint256,uint256,uint256,bool)
          handler: handleRebalanced         
templates:
  - kind: ethereum/contract
    name: Pool
    network: mainnet
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - Pool
        - Desyn
        - Swap
      abis:
        - name: Pool
          file: ./abis/BPool.json
        - name: BToken
          file: ./abis/BToken.json
        - name: BTokenBytes
          file: ./abis/BTokenBytes32.json
      eventHandlers:
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0x34e1990700000000000000000000000000000000000000000000000000000000"
          handler: handleSetSwapFee
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0x92eefe9b00000000000000000000000000000000000000000000000000000000"
          handler: handleSetController
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0x49b5955200000000000000000000000000000000000000000000000000000000"
          handler: handleSetPublicSwap
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0x4bb278f300000000000000000000000000000000000000000000000000000000"
          handler: handleFinalize
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0x3fdddaa200000000000000000000000000000000000000000000000000000000"
          handler: handleRebind
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0xe4e1e53800000000000000000000000000000000000000000000000000000000"
          handler: handleRebind
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0xcbf3a56b00000000000000000000000000000000000000000000000000000000"
          handler: handleRebindSmart
        - event: LOG_CALL(indexed bytes4,indexed address,bytes)
          topic0: "0xcf5e7bd300000000000000000000000000000000000000000000000000000000"
          handler: handleUnbind
        - event: LOG_JOIN(indexed address,indexed address,uint256)
          handler: handleJoinPool
        - event: LOG_EXIT(indexed address,indexed address,uint256)
          handler: handleExitPool
      callHandlers:
        - function: gulp(address)
          handler: handleGulp
  - kind: ethereum/contract
    name: CrpController
    network: mainnet
    source:
      abi: ConfigurableRightsPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - Pool
      abis:
        - name: ConfigurableRightsPool
          file: ./abis/ConfigurableRightsPool.json
      eventHandlers:
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleSetCrpController
        - event: SetManagerFee(indexed uint256,indexed uint256,indexed uint256,uint256)
          handler: handleSetManagerFee
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleSmartTransfer
        - event: LogJoin(indexed address,indexed address,uint256)
          handler: handleSmartJoinPool
        - event: LogExit(indexed address,indexed address,uint256)
          handler: handleSmartExitPool
        - event: LogCall(indexed bytes4,indexed address,bytes)
          topic0: "0x3befcde800000000000000000000000000000000000000000000000000000000"
          handler: handleShareJoinPool
        - event: LogCall(indexed bytes4,indexed address,bytes)
          topic0: "0xb02f0b7300000000000000000000000000000000000000000000000000000000"
          handler: handleShareExitPool
        - event: LOG_WHITELIST(indexed address,indexed uint256,indexed address,address)
          handler: handleLogWhiteList
        - event: LogCall(indexed bytes4,indexed address,bytes)
          topic0: "0xc83a1c2d00000000000000000000000000000000000000000000000000000000"
          handler: handleWhiteListLiqudityProvider
        - event: LogCall(indexed bytes4,indexed address,bytes)
          topic0: "0xe2762d4b00000000000000000000000000000000000000000000000000000000"
          handler: handleRemoveWhitelistedLiquidityProvider
        - event: PoolTokenInit(indexed address,address,address,uint256,uint256)
          handler: handlePoolTokenInit
        - event: LogCall(indexed bytes4,indexed address,bytes)
          topic0: "0xb36b4fa000000000000000000000000000000000000000000000000000000000"
          handler: handleRebalanceExcute
 
